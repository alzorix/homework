'''(№ 6647) (Е. Джобс) Два игрока, Петя и Ваня, играют в следующую игру.
 Перед игроками лежат две кучи камней. Игроки ходят по очереди, первый ход делает Петя.
  За один ход игрок может добавить в одну из куч (по своему выбору) два камня,
   или увеличить количество камней в куче в два раза. Например, пусть в одной куче 10 камней,
    а в другой 5 камней; такую позицию в игре будем обозначать (10, 5).
     Тогда за один ход можно получить любую из четырёх позиций: (12, 5), (20, 5), (10, 7), (10, 10).
      Для того чтобы делать ходы, у каждого игрока есть неограниченное количество камней.
Игра завершается в тот момент, когда произведение количеств камней в кучах становится не менее 123.
Победителем считается игрок, сделавший последний ход, т.е. первым получивший такую позицию,
при которой произведение числа камней в кучах будет 123 или более.
В начальный момент в первой куче было 3 камня, во второй куче - S камней; 1 ≤ S ≤ 40.
Ответьте на следующие вопросы:
  Вопрос 1. Найдите наибольшее значение S, при котором Ваня выигрывает своим первым ходом после неудачного хода Пети.
  Вопрос 2. Найдите два наибольших значения S, при которых у Пети есть выигрышная стратегия,
                      причём одновременно выполняются два условия:
− Петя не может выиграть за один ход;
− Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня.
Найденные значения запишите в ответе в порядке возрастания.
  Вопрос 3. Найдите наибольшее значение S, при котором одновременно выполняются два условия:
– у Вани есть выигрышная стратегия, позволяющая ему выиграть первым или вторым ходом при любой игре Пети;
– у Вани нет стратегии, которая позволит ему гарантированно выиграть первым ходом;
– Петя может выбирать, каким ходом выиграет Ваня. '''


def F_19(A,B,H):
    if A*B >= 123 and H == 3:
        return True
    elif A*B >= 123  and H != 3:
        return False
    elif A*B<123 and H == 3:
        return False

    if H % 2 ==0:
        return F_19(A+2,B,H+1) or F_19(A,B+2,H+1) or F_19(A*2,B,H+1) or F_19(A,B*2,H+1)
    else:
        return F_19(A + 2, B, H + 1) or F_19(A, B + 2, H + 1) or F_19(A * 2, B, H + 1) or F_19(A, B * 2, H + 1)
for S in range(1,41):
    if F_19(3,S,1):
        print(S)
        #38
'''Вопрос 2. Найдите два наибольших значения S, при которых у Пети есть выигрышная стратегия,
                      причём одновременно выполняются два условия:
− Петя не может выиграть за один ход;
− Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня.
Найденные значения запишите в ответе в порядке возрастания.'''

def F_20(A,B,H):
    #st
    #pet
    #van
    if A*B >= 123 and H == 4 :
        return True
    elif A*B >= 123  and H != 4   :
        return False
    elif A*B<123 and H == 4:
        return False

    if H % 2 ==0:
        return F_20(A+2,B,H+1) and F_20(A,B+2,H+1) and F_20(A*2,B,H+1) and F_20(A,B*2,H+1)
    else:
        return F_20(A + 2, B, H + 1) or F_20(A, B + 2, H + 1) or F_20(A * 2, B, H + 1) or F_20(A, B * 2, H + 1)


for S in range(1,41):
    if F_20(3,S,1):

            print(S)


'''  Вопрос 3. Найдите наибольшее значение S, при котором одновременно выполняются два условия:
– у Вани есть выигрышная стратегия, позволяющая ему выиграть первым или вторым ходом при любой игре Пети;
– у Вани нет стратегии, которая позволит ему гарантированно выиграть первым ходом;
– Петя может выбирать, каким ходом выиграет Ваня.'''

def F_21_(A,B,H):
    if A*B >= 123 and H == 3:
        return True
    elif A*B >= 123  and H != 3:
        return False
    elif A*B<123 and H == 3:
        return False

    if H % 2 ==0:
        return F_21_(A+2,B,H+1) or F_21_(A,B+2,H+1) or F_21_(A*2,B,H+1) or F_21_(A,B*2,H+1)
    else:
        return F_21_(A + 2, B, H + 1) or F_21_(A, B + 2, H + 1) or F_21_(A * 2, B, H + 1) or F_21_(A, B * 2, H + 1)
def F_21(A,B,H):
    if A*B >= 123 and (H == 3 or H == 5):
        return True
    elif A*B >= 123  and H != 3 and H != 5:
        return False
    elif A*B<123 and H == 5:
        return False

    if H % 2 ==0:
        return F_21(A+2,B,H+1) or F_21(A,B+2,H+1) or F_21(A*2,B,H+1) or F_21(A,B*2,H+1)
    else:
        return F_21(A + 2, B, H + 1) or F_21(A, B + 2, H + 1) or F_21(A * 2, B, H + 1) or F_21(A, B * 2, H + 1)
for S in range(1,41):
    if F_21(3,S,1):
        print(S)
#38 47