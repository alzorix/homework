'''(№ 4138) (А. Богданов) Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит одна куча камней.
 Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может
  а) убрать из кучи половину камней, если количество камней в куче делится на 2; иначе убрать из кучи два камня;
  б) убрать из кучи две трети камней, если количество камней в куче делится на 3; иначе убрать из кучи три камня.
Например, пусть в куче 10 камней, тогда можно убрать половину или только три камня. А если в куче 12 камней,
то можно убрать половину или две трети камней. Игра завершается в тот момент, когда в куче останется ровно 1 камень.
 Победителем считается игрок, сделавший последний ход, т.е. первым получивший кучу, в которой будет ровно 1 камень.
  В начальный момент в куче было S камней, 1 < S ≤ 37.
Ответьте на следующие вопросы:
  Вопрос 1. Найдите максимальное значение S, при котором Ваня может выиграть своим первым ходом после неудачного хода Пети,
  который мог выиграть своим первым ходом.
  Вопрос 2. Определите минимальное и максимальное значения S, при которых у Пети есть выигрышная стратегия,
  причём одновременно выполняются два условия:
− Петя не может выиграть за один ход;
− Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня.
Найденные значения запишите в ответе в порядке возрастания.
  Вопрос 3. Найдите минимальное значение S, при котором одновременно выполняются два условия:
– у Вани есть выигрышная стратегия, позволяющая ему выиграть первым или вторым ходом при любой игре Пети;
– у Вани нет стратегии, которая позволит ему гарантированно выиграть первым ходом. '''



def f_19(A,H):
    # 1 - start
    # 2 - ход Пети
    # 3 - ход Вани

    if (A == 1) and H == 3:
        return True
    elif (A == 1) and H != 3:
        return False
    elif (A != 1 ) and H == 3:
        return False


    '''  а) убрать из кучи половину камней, если количество камней в куче делится на 2; иначе убрать из кучи два камня;
  б) убрать из кучи две трети камней, если количество камней в куче делится на 3; иначе убрать из кучи три камня.'''

    if A % 2 ==0:
        A1 = A//2
    else:
        A1 = A-2

    if A % 3 ==0:
        A2 = A//3
    else:
        A2 = A -3

    if H % 2 == 0:  # Ход Пети (который мог выиграть своим первым ходом) – он будет стараться помешать Ване =>  наилучший  результат
        return f_19(A1, H + 1) or f_19(A2, H + 1)
    else:  # Ход Вани – Ваня может и выиграть и проиграть,так что 100% победа нам не нужна
        return f_19(A1, H + 1) or f_19(A2, H + 1)
#При переборе or/and правильного ответа не получается,ошибка в чем-то другом

for S in range(1,38):
    if f_19(S,1):
        print(S)


#Подходим только 4 ,только из неё первым ходом может выйиграть Петя

#Опять неверно
print(111111111111111)
def f_20(A,H):
    # 1 - start
    # 2 - ход Пети
    # 3 - ход Вани

    if H == 2 and A == 1:
        return False
    elif H == 4 and A == 1:
        return True
    elif H == 4 and A !=1:
        return False


    '''  а) убрать из кучи половину камней, если количество камней в куче делится на 2; иначе убрать из кучи два камня;
  б) убрать из кучи две трети камней, если количество камней в куче делится на 3; иначе убрать из кучи три камня.'''

    if A % 2 == 0:
        A1 = A // 2
    else:
        A1 = A - 2

    if A % 3 == 0:
        A2 = A * 1 // 3
    else:
        A2 = A - 3

    if H % 2 == 0:  # Ход Пети - Стратегия должна всегда приводить к победе
        return f_20(A1, H + 1) and f_20(A2, H + 1)
    else:  #  Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня => У Пети должен быть лучший результат
        return f_20(A1, H + 1) or f_20(A2, H + 1)
#При переборе or/and правильного ответа не получается,ошибка в чм-то другом

for S in range(1, 38):
    if f_20(S, 1):
        print(S)
#Опять неверно


'''  Вопрос 3. Найдите минимальное значение S, при котором одновременно выполняются два условия:
– у Вани есть выигрышная стратегия, позволяющая ему выиграть первым или вторым ходом при любой игре Пети;
– у Вани нет стратегии, которая позволит ему гарантированно выиграть первым ходом. '''
print(222222222222222222222)
def f_21(A,H):

    if (A == 1) and H == 3:
        return True
    elif (A == 1) and H == 5:
        return True
    elif (A != 1 ) and H == 5:
        return False
    elif A == 1 and (H !=3 and H !=5):
        return False


    if A % 2 == 0:
        A1 = A // 2
    else:
        A1 = A - 2

    if A % 3 == 0:
        A2 = A * 1 // 3
    else:
        A2 = A - 3

    if H % 2 == 0:  # Ход Пети - Стратегия должна всегда приводить к победе
            return f_21(A1, H + 1) or f_21(A2, H + 1)
    else:  # Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня => У Пети должен быть лучший результат
            return f_21(A1, H + 1) and f_21(A2, H + 1)

def f_21_new(A,H):

    if A == 1 and H == 3:
        return True
    elif A != 1  and H == 3:
        return False
    elif A == 1 and H !=3:
        return False
    elif A <1:
        return False


    if A % 2 == 0:
        A1 = A // 2
    else:
        A1 = A - 2

    if A % 3 == 0:
        A2 = A * 1 // 3
    else:
        A2 = A - 3

    if H % 2 == 0:  # Ход Пети - Стратегия должна всегда приводить к победе
            return f_21_new(A1, H + 1) or f_21_new(A2, H + 1)
    else:  # Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня => У Пети должен быть лучший результат
            return f_21_new(A1, H + 1) and f_21_new(A2, H + 1)
#При переборе or/and правильного ответа не получается,ошибка в чём-то другом
for S in range(1, 38):
        if f_21(S, 1):
            print(S)
print(f_21_new(5,1))
print(f_21_new(6,1))
print(f_21_new(9,1))
print(f_21_new(24,1))
print(f_21_new(30,1))
print(f_21_new(36,1))


