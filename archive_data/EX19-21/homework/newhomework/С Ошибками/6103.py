'''(№ 6103) (А. Богданов) Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежат две кучи камней.
 Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может добавить в меньшую кучу один или три камня.
  Изменять количество камней в большей куче не разрешается. Игра завершается, когда количество камней в кучах становится равным.
   Победителем считается игрок, сделавший последний ход, то есть первым сравнявшим количество камней в двух кучах.
   Игроки играют рационально, т. е. без ошибок. В начальный момент в первой куче было 13 камней, а во второй – S камней, 1 ≤ S ≤ 23.
Ответьте на следующие вопросы:
  Вопрос 1. Укажите минимальное значение S, при котором Петя не может выиграть за один ход, но при любом ходе Пети Ваня может выиграть своим первым ходом.
  Вопрос 2. Найдите два наименьших значения S, при которых у Пети есть выигрышная стратегия, причём одновременно выполняются два условия:
− Петя не может выиграть за один ход;
− Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня.
Найденные значения запишите в ответе в порядке возрастания.
  Вопрос 3. Найдите два значения S, при которых одновременно выполняются три условия:
– у Вани есть выигрышная стратегия, позволяющая ему выиграть первым или вторым ходом при любой игре Пети;
– у Вани нет стратегии, которая позволит ему гарантированно выиграть первым ходом;
– Петя может выбирать, каким ходом выиграет Ваня.
Найденные значения запишите в ответе в порядке возрастания.'''
print("19:")
def F(A,B,H):
    #1 start
    #2 Pet
    #3 Van
    if A==B and H ==3:
        return True
    elif A==B and H !=3:
        return False
    elif A!=B and H ==3:
        return False

    ''' может добавить в меньшую кучу один или три камня'''

    A,B = sorted([A,B])


    if H%2 == 0:
            return F(A+1,B,H+1)  or F(A+3,B,H+1)
    else:
            return F(A + 1, B, H + 1) and F(A + 3, B, H + 1)


# for S in range(1,24):
#
#
#     if F(13,S,1):
#         print(S)
#         break
#9
'''  Вопрос 2. Найдите два наименьших значения S, при которых у Пети есть выигрышная стратегия, причём одновременно выполняются два условия:
− Петя не может выиграть за один ход;
− Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня.
Найденные значения запишите в ответе в порядке возрастания.'''

print("20:")
def F(A, B, H):
    # 1 start
    # 2 Pet
    # 3 Van
    if A == B and H == 4:
        return True
    elif A == B and H != 4:
        return False
    elif A != B and H == 4:
        return False

    ''' может добавить в меньшую кучу один или три камня'''

    A, B = sorted([A, B])

    if H % 2 == 0:
        return F(A + 1, B, H + 1) and F(A + 3, B, H + 1)
    else:
        return F(A + 1, B, H + 1) or F(A + 3, B, H + 1)


# for S in range(1, 24):
#
#     if F(13, S, 1):
#         print(S)

#6 8
print("21:")
'''  Вопрос 3. Найдите два значения S, при которых одновременно выполняются три условия:
– у Вани есть выигрышная стратегия, позволяющая ему выиграть первым или вторым ходом при любой игре Пети;
– у Вани нет стратегии, которая позволит ему гарантированно выиграть первым ходом;
– Петя может выбирать, каким ходом выиграет Ваня.
Найденные значения запишите в ответе в порядке возрастания.'''
def F_(A,B,H):
    #1 start
    #2 Pet
    #3 Van
    if A==B and H ==3:
        return True
    elif A==B and H !=3:
        return False
    elif A!=B and H ==3:
        return False

    ''' может добавить в меньшую кучу один или три камня'''

    A,B = sorted([A,B])


    if H%2 == 0:
            return F_(A+1,B,H+1)  or F_(A+3,B,H+1)
    else:
            return F_(A + 1, B, H + 1) and F_(A + 3, B, H + 1)


def F(A,B,H):
    #1 start
    #2 Pet
    #3 Van
    if A==B and (H ==3 or H ==5):
        if H == 3:
            print(H)

        if H == 5:
            print(H)
        return True
    elif A==B and H !=3 and H !=5:

        return False
    elif A!=B and H ==5:
        return False

    ''' может добавить в меньшую кучу один или три камня'''

    A,B = sorted([A,B])



    if H%2 == 0:
            return F(A+1,B,H+1)  or F(A+3,B,H+1)
    else:
            return F(A + 1, B, H + 1) and F(A + 3, B, H + 1)
for S in range(1,24):


    if F(13,S,1):
        print(S,not(F_(13,S,1)))

'''5
5
5
5
5 True
5
5
5
5
7 True
5
5
3
9 False
3
3
11 False
3
3
15 False
5
5
3
17 False
5
5
5
5
19 True
5
5
5
5
21 True'''