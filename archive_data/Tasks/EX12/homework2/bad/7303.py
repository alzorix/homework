'''(№ 7303) Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки символов.

1. заменить (v, w)
2. нашлось (v)

Первая команда заменяет в строке первое слева вхождение цепочки v на цепочку w.
 Если цепочки v в строке нет, эта команда не изменяет строку. Вторая команда проверяет, встречается ли цепочка v в строке исполнителя Редактор.
Дана программа для исполнителя Редактор:

ПОКА нашлось(01) ИЛИ нашлось(02)
  заменить(02, 1110)
  заменить(01, 2210)
КОНЕЦ ПОКА

На вход программе поступает строка длиной не менее 95 символов, первый из которых - цифра 0, а остальные – цифры 1 и 2.
 После выполнения программы получилась строка, сумма цифр которой – число-палиндром (читается одинаково слева направо и справа налево).
  Чему равна наименьшая возможная сумма цифр в исходной строке? '''

def zamenit(S,V,W):
    S = str(S)
    V = str(V)
    W = str(W)
    S = S.replace(V,W,1)
    return S
def nashlos(S,V):
    S = str(S)
    V = str(V)
    return S.count(V)
def zifrsum(S):
    S = str(S)
    F = 0
    for i in S:
        F = F + int(i)
    return F

SLL = list()
for two in range(0,100):
    for one in range(0,100):
        s = "0" + "1" *one + "2"*two
        INPUTSTR = s
        if len(s) >=95:
         while nashlos(s,"01") or  nashlos(s,"02"):

            s = zamenit(s,"02",1110)
            s= zamenit(s,"01",2210)
         R = zifrsum(s)
         if str(R) == str(R)[::-1]:
                SLL.append(zifrsum(INPUTSTR))
print(min(SLL))