'''(№ 6786) (Е. Джобс) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
— символ «?» означает ровно одну произвольную цифру;
— символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425.
Среди натуральных чисел, не превышающих 104, найдите все числа, соответствующие маске *2?2,
 которые можно разложить на произведение ровно 7 простых множителей. Например, число 20 можно разложить на произведение 2·2·5,
  где присутствует три простых множителя. В ответе запишите все найденные числа в порядке возрастания,
   справа от каждого числа – соответствующий ему максимальный множитель из разложения на простые множители.'''
def OTAs(num):# В связи с 104 и "соответствующий ему максимальный множитель из разложения на простые множители" функцию не трогал
    F = list()
    num = int(num)
    q = 2
    while q**2 <= num:
        if num % q == 0:
            F.append(q)
            num = num//q
        else:
            q +=1
    F.append(num)

    return F


from fnmatch import fnmatch

for i in range(1,10000):
    if fnmatch(str(i),"*2?2"):
        func = OTAs(i)
        if len(func) ==7:
            print(i,max(func))